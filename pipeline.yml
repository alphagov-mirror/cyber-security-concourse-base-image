---
health_status_notify: &health_status_notify
  put: health-notification


resource_types:
  - name: http-api
    type: docker-image
    source:
      repository: gdscyber/http-api-resource


resources:
  - name: health-notification
    type: http-api
    source:
      uri: https://((health_host_prod))/?alert_type=concourse$&alert_name=health
      method: POST
      headers:
        Authorization: "Bearer ((health_token_prod))"
      json:
        service: "{service}"
        state: "{health}"
        message: "{message}"
        pipeline: "{BUILD_PIPELINE_NAME}"
        job: "{BUILD_JOB_NAME}"
        build_number: "{BUILD_NAME}"
      service: "Docker Build Pipeline"

  - name: concourse-base-image-git
    type: git
    source:
      branch: master
      paths:
        - Dockerfile
      uri: https://github.com/alphagov/cyber-security-concourse-base-image.git

  - name: load-testing-image-git
    type: git
    source:
      branch: master
      paths:
        - load_testing/Dockerfile
      uri: https://github.com/alphagov/cyber-security-concourse-base-image.git

  - name: github-security-dashboard-image-git
    type: git
    source:
      branch: master
      paths:
        - Dockerfile
      uri: https://github.com/alphagov/cyber-security-security-advisory-dashboard.git

  - name: cloudwatch-health-image-git
    type: git
    source:
      branch: master
      paths:
        - docker/concourse-worker-health/Dockerfile
      uri: https://github.com/alphagov/cyber-security-cloudwatch-config.git

  - name: gsuite-splunk-image-git
    type: git
    source:
      branch: master
      private_key: ((gsuite-splunk-private-key))
      paths:
        - gds-gsuite-govuk-paas/Dockerfile
        - gds-gsuite-govuk-paas/input-add-on-for-g-suite-app*
        - gds-gsuite-govuk-paas/bin/*
      uri: git@github.com:alphagov/cyber-security-splunk-apps.git

  - name: csls-image-git
    type: git
    source:
      branch: master
      paths:
        - config/concourse/Dockerfile
      private_key: ((pipeline-git-priv-key))
      uri: git@github.com:alphagov/centralised-security-logging-service.git

  - name: cyber-chalice-git
    type: git
    source:
      branch: master
      paths:
        - dockerfiles/chalice/Dockerfile
      private_key: ((pipeline-git-priv-key))
      uri: git@github.com:alphagov/csw-concourse.git

  - name: csw-image-git
    type: git
    source:
      branch: master
      paths:
        - dockerfiles/csw/Dockerfile
      private_key: ((pipeline-git-priv-key))
      uri: git@github.com:alphagov/csw-concourse.git

  - name: concourse-worker-health-git
    type: git
    source:
      branch: master
      paths:
        - docker/concourse-worker-health/Dockerfile
      private_key: ((pipeline-git-priv-key))
      uri: git@github.com:alphagov/cyber-security-cloudwatch-config.git

  - name: concourse-base-image-docker-hub
    type: registry-image
    source: &build-image-source
      username: ((dockerhub_username))
      password: ((dockerhub_password))
      repository: gdscyber/cyber-security-concourse-base-image

  - name: load-testing-image-docker-hub
    type: registry-image
    source:
      <<: *build-image-source
      repository: gdscyber/artillery-load-testing

  - name: github-security-dashboard-image-docker-hub
    type: registry-image
    source:
      <<: *build-image-source
      repository: gdscyber/sec_adv

  - name: cloudwatch-health-image-docker-hub
    type: registry-image
    source:
      <<: *build-image-source
      repository: gdscyber/concourse-worker-health

  - name: gsuite-splunk-image-docker-hub
    type: registry-image
    source:
      <<: *build-image-source
      repository: gdscyber/gsuite-splunk

  - name: csls-image-docker-hub
    type: registry-image
    source:
      <<: *build-image-source
      repository: gdscyber/csls-concourse

  - name: cyber-chalice-image-docker-hub
    type: registry-image
    source:
      <<: *build-image-source
      repository: gdscyber/cyber-chalice

  - name: csw-concourse-worker-image-docker-hub
    type: registry-image
    source:
      <<: *build-image-source
      repository: gdscyber/csw-concourse-worker

jobs:
  - name: build_base_docker_image
    serial: false
    plan:
      - get: concourse-base-image-git
        trigger: true

      - task: build
        privileged: true
        config: &build-image-config
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: vito/oci-build-task
          params:
            CONTEXT: concourse-base-image-git/
          inputs:
            - name: concourse-base-image-git
          outputs:
            - name: image
          run:
            path: build
        on_success:
          <<: *health_status_notify
          params:
            message: "Cyber security concourse base image build completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "Cyber security concourse base image build failed."
            health: unhealthy


      - put: concourse-base-image-docker-hub
        params:
          image: image/image.tar
        on_success:
          <<: *health_status_notify
          params:
            message: "Cyber security concourse base image Docker Hub upload completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "Cyber security concourse base image Docker Hub upload failed."
            health: unhealthy


  - name: build_load_testing_docker_image
    serial: false
    plan:
      - get: load-testing-image-git
        trigger: true
      - task: build
        privileged: true
        config:
          <<: *build-image-config
          params:
            CONTEXT: load-testing-image-git/load_testing
          inputs:
            - name: load-testing-image-git
          outputs:
            - name: image
          run:
            path: build
        on_success:
          <<: *health_status_notify
          params:
            message: "Load testing image build completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "Load testing image build failed."
            health: unhealthy

      - put: load-testing-image-docker-hub
        params:
          image: image/image.tar
        on_success:
          <<: *health_status_notify
          params:
            message: "Load testing image Docker Hub upload completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "Load testing image Docker Hub upload failed."
            health: unhealthy


  - name: build_github_security_dashboard_docker_image
    serial: false
    plan:
      - get: github-security-dashboard-image-git
        trigger: true

      - task: build
        privileged: true
        config:
          <<: *build-image-config
          params:
            CONTEXT: github-security-dashboard-image-git/
          inputs:
            - name: github-security-dashboard-image-git
          outputs:
            - name: image
          run:
            path: build
        on_success:
          <<: *health_status_notify
          params:
            message: "GitHub security dashboard image build completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "GitHub security dashboard image build failed."
            health: unhealthy

      - put: github-security-dashboard-image-docker-hub
        params:
          image: image/image.tar
        on_success:
          <<: *health_status_notify
          params:
            message: "GitHub security dashboard image Docker Hub upload completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "GitHub security dashboard image Docker Hub upload failed."
            health: unhealthy


  - name: cloudwatch_health_docker_image
    serial: false
    plan:
      - get: cloudwatch-health-image-git
        trigger: true

      - task: build
        privileged: true
        config:
          <<: *build-image-config
          params:
            CONTEXT: cloudwatch-health-image-git/docker/concourse-worker-health/
          inputs:
            - name: cloudwatch-health-image-git
          outputs:
            - name: image
          run:
            path: build
        on_success:
          <<: *health_status_notify
          params:
            message: "Cloudwatch health image build completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "Cloudwatch health image build failed."
            health: unhealthy

      - put: cloudwatch-health-image-docker-hub
        params:
          image: image/image.tar
        on_success:
          <<: *health_status_notify
          params:
            message: "Cloudwatch health image Docker Hub upload completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "Cloudwatch health image Docker Hub upload failed."
            health: unhealthy

  - name: csls_docker_image
    serial: false
    plan:
      - get: csls-image-git
        trigger: true

      - task: build
        privileged: true
        config: &build-image-config
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: vito/oci-build-task
          params:
            CONTEXT: csls-image-git/config/concourse
          inputs:
            - name: csls-image-git
          outputs:
            - name: image
          run:
            path: build
        on_success:
          <<: *health_status_notify
          params:
            message: "CSLS image build completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "CSLS image build failed."
            health: unhealthy

      - put: csls-image-docker-hub
        params:
          image: image/image.tar
        on_success:
          <<: *health_status_notify
          params:
            message: "CSLS image Docker Hub upload completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "CSLS image Docker Hub upload failed."
            health: unhealthy


  - name: build_gsuite_splunk_docker_image
    serial: false
    plan:
      - get: gsuite-splunk-image-git
        trigger: true
      - task: build
        privileged: true
        config:
          <<: *build-image-config
          params:
            CONTEXT: gsuite-splunk-image-git/gds-gsuite-govuk-paas/
          inputs:
            - name: gsuite-splunk-image-git
          outputs:
            - name: image
          run:
            path: build
        on_success:
          <<: *health_status_notify
          params:
            message: "Gsuite splunk image build completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "Gsuite splunk image build failed."
            health: unhealthy

      - put: gsuite-splunk-image-docker-hub
        params:
          image: image/image.tar
        on_success:
          <<: *health_status_notify
          params:
            message: "Gsuite splunk image Docker Hub upload completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "Gsuite splunk image Docker Hub upload failed."
            health: unhealthy

  - name: build_cyber_chalice_docker_image
    serial: false
    plan:
      - get: cyber-chalice-git
        trigger: true
      - task: build
        privileged: true
        config:
          <<: *build-image-config
          params:
            CONTEXT: cyber-chalice-git/dockerfiles/chalice/
          inputs:
            - name: cyber-chalice-git
          outputs:
            - name: image
          run:
            path: build
        on_success:
          <<: *health_status_notify
          params:
            message: "cyber-chalice image build completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "cyber-chalice image build failed."
            health: unhealthy

      - put: cyber-chalice-image-docker-hub
        params:
          image: image/image.tar
        on_success:
          <<: *health_status_notify
          params:
            message: "cyber-chalice image Docker Hub upload completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "cyber-chalice image Docker Hub upload failed."
            health: unhealthy

  - name: build_csw_concourse_worker_docker_image
    serial: false
    plan:
      - get: csw-image-git
        trigger: true
      - task: build
        privileged: true
        config:
          <<: *build-image-config
          params:
            CONTEXT: csw-image-git/dockerfiles/csw/
          inputs:
            - name: csw-image-git
          outputs:
            - name: image
          run:
            path: build
        on_success:
          <<: *health_status_notify
          params:
            message: "csw-concourse-worker image build completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "csw-concourse-worker image build failed."
            health: unhealthy

      - put: csw-concourse-worker-image-docker-hub
        params:
          image: image/image.tar
        on_success:
          <<: *health_status_notify
          params:
            message: "csw-concourse-worker image Docker Hub upload completed successfully."
            health: healthy
        on_failure:
          <<: *health_status_notify
          params:
            message: "csw-concourse-worker image Docker Hub upload failed."
            health: unhealthy
